--[[ Lua code. See documentation: https://api.tabletopsimulator.com/ --]]
toggle_fog_button_guid = "b3e2bc"
deal_dice_button_guid = "b381ba"
sandstorm_token_guid = "ef4503"
sandstorm_effect_guid = "ca7876"
player_board_guid = {}
player_board_guid.brown = "6b6d0b"
unused_components_guid = "09c8d0"
common_dice_supply_guid = "b1f1e2"

GUIDS = {
  ['protection_card'] = '103219',
  ['protection6_card'] = '271f4d',
  ['turn_order_card'] = '969667',
  ['sandstorm_card'] = '3e9df9',
  ['landsraad_card'] = 'd9492f',
  ['common_dice_supply'] = 'b1f1e2',
  ['unused_components'] = '09c8d0'
}

FACTION_TO_COLOR = {
  ['Atreides'] = 'Red',
  ['Harkonnen'] = 'Blue',
  ['Fremen'] = 'Brown',
  ['Corrino'] = 'Yellow',
  ['Spacing Guild'] = 'Purple',
  ['Bene Gesserit'] = 'White'
}

COLOR_TO_FACTION = {
  ['Red'] = 'Atreides',
  ['Blue'] = 'Harkonnen',
  ['Brown'] = 'Fremen',
  ['Yellow'] = 'Corrino',
  ['Purple'] = 'Spacing Guild',
  ['White'] = 'Bene Gesserit'
}

function loadGlobalObjectsFromGUIDS()
  G = {}
  for key, guid in pairs(GUIDS) do
    G[key] = getObjectFromGUID(guid)
  end
  return G
end

-- https://stackoverflow.com/a/2705804
function tableLength(T)
  local count = 0
  for _ in pairs(T) do count = count + 1 end
  return count
end

function printToAllAction(player_color, action)
  printToAll('[' .. COLOR_TO_FACTION[player_color] .. '] ' .. action, stringColorToRGB(player_color))
end

--[[ The onLoad event is called after the game save finishes loading. --]]
function onLoad()
  loadGlobalObjectsFromGUIDS()
  button_setup("Toggle Fog", toggle_fog_button_guid, 'toggleFog', 4000, 1500, 800)
  button_setup("Set up game!", deal_dice_button_guid, 'setupGame', 4000, 1500, 800)
  --local sandstorm_effect = getObjectFromGUID(sandstorm_effect_guid)
  --sandstorm_effect.playLoopingEffect(1)
  --sandstorm_token.addAttachment(sandstorm_effect)
end

--[[ The onUpdate event is called once per frame. --]]
function onUpdate()
    --[[ print('onUpdate loop!') --]]
end

fog_is_down = true

function dealDice()
  local seated_players = getSeatedPlayers() --table
  for _, player_color in ipairs(seated_players) do
    local player = Player[player_color] --Player
    -- Get table of position of player's hand
    local player_hand = player.getHandTransform() --table
    -- Get dice positions relative to hand
    local dice_pos_offset = player_hand.position + 7*player_hand.forward --Vector
    local dice_pos_1 = dice_pos_offset + 0*player_hand.right --Vector
    local dice_pos_2 = dice_pos_offset + 1*player_hand.right --Vector
    local dice_pos_3 = dice_pos_offset + 2*player_hand.right --Vector
    -- Deal dice to table near hands
    G.unused_components.takeObject({position=dice_pos_1}) --object
    G.unused_components.takeObject({position=dice_pos_2}) --object
    G.unused_components.takeObject({position=dice_pos_3}) --object
    printToAllAction(player_color, "is dealt 3 dice.")
    -- Deal 3 dice per player to common supply
    G.common_dice_supply.putObject(G.unused_components.takeObject()) --object
    G.common_dice_supply.putObject(G.unused_components.takeObject()) --object
    G.common_dice_supply.putObject(G.unused_components.takeObject()) --object
  end
  printToAll((#seated_players * 3) .. " dice placed in common supply.")
  -- Destroy button now that dice are dealt
  getObjectFromGUID(deal_dice_button_guid).destruct()
end

function putInFrontOfPlayer(object, player_color, forward_offset)
  local forward_offset = forward_offset or 18
  local player_hand = Player[player_color].getHandTransform()
  local pos = player_hand.position + forward_offset*player_hand.forward
  object.setPositionSmooth(pos)
end

function dealStartingCards()
  local seated_players = getSeatedPlayers() --table
  for _, player_color in ipairs(seated_players) do
    if player_color == 'Brown' then
      putInFrontOfPlayer(G.protection_card, player_color)
      if #seated_players == 6 then
        putInFrontOfPlayer(G.protection6_card, player_color)
      end
    end
  end
end


function cleanupUnusedFactions()
  local unused_components = getObjectFromGUID(unused_components_guid) --object
  for _, player_color in pairs(Player.getAvailableColors()) do
    if not Player[player_color].seated then
      local unused_objects = getObjectsWithTag(player_color)
      for _, object in ipairs(unused_objects) do
        unused_components.putObject(object) --object
      end
    end
  end
end

function toggleFog()
  local allObjects = getAllObjects()
  for _, o in ipairs(allObjects) do
    if o.name == "FogOfWarTrigger" then
      local fog = getObjectFromGUID(o.guid)
      local pos = fog.getPosition()
      local new_y
      if fog_is_down then
        new_y = 3.51
      else
        new_y = -2
      end
      fog.setPositionSmooth({ pos.x, new_y, pos.z })
    end
  end
  fog_is_down = not fog_is_down
end

function button_setup(label, guid, function_name, width, height, font_size)
  local button = getObjectFromGUID(guid)
  if button == nil then
    print("Button '", label, "' does not exist, skipping it...")
    return
  end
  local button_parameters = {}
  button_parameters.click_function = function_name
  button_parameters.label = label
  button_parameters.function_owner = nil
  button_parameters.position = { 0, 0.2, 0 }
  --button_parameters.rotation = rotation.none
  button_parameters.width = width
  button_parameters.height = height
  button_parameters.font_size = font_size
  button.createButton(button_parameters)
  return button
end

function setupGame()
  dealDice()
  cleanupUnusedFactions()
  dealStartingCards()
end
