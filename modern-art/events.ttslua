-- events.ttslua
--[[
A place to put global event handlers, such as making change for money
Author:  Madeline Prelee, 2021-04-16
--]]

--[[
Inspired by the AMAZING Twilight Imperium IV mod, pressing 'R' on money tokens
will exchange them for larger/smaller bills.  This could be more intelligent,
like condensing an arbitrary set of bills into the smallest-set of component
bills, but it works decent enough already.
TODO:  Make this even fancier...
]]
function onObjectRandomize(object, playerColor)
  if object.hasTag('Deck') then
    deck.shuffle()
    return
  --elseif object.hasTag('painting') then
  --  announceAuction(playerColor, object)
  --  return
  elseif not object.hasTag('moneytoken') then
    return
  end
  local position = object.getPosition()
  local rotation = object.getRotation()
  local value = getMoneyValue(object)
  local takeBank = nil
  local putBank = nil
  if object.hasTag('moneytoken') and object.getQuantity() == -1 then
    local numTake = 0
    if value == 1 then
      return
    elseif value == 5 then
      putBank = getObjectFromGUID(guids.banks[5])
      takeBank = getObjectFromGUID(guids.bank[1])
      numTake = 5
    elseif value == 10 then
      putBank = getObjectFromGUID(guids.bank[10])
      takeBank = getObjectFromGUID(guids.bank[5])
      numTake = 2
    elseif value == 20 then
      putBank = getObjectFromGUID(guids.bank[20])
      takeBank = getObjectFromGUID(guids.bank[10])
      numTake = 2
    elseif value == 50 then
      putBank = getObjectFromGUID(guids.bank[50])
      takeBank = getObjectFromGUID(guids.bank[10])
      numTake = 5
    elseif value == 100 then
      putBank = getObjectFromGUID(guids.bank[100])
      takeBank = getObjectFromGUID(guids.bank[50])
      numTake = 2
    end
    putBank.putObject(object)
    for i = 1, numTake do
      takeBank.takeObject({position=position,rotation=rotation})
    end
  -- stack of objects
  elseif object.getQuantity() > 0 and object.hasTag('moneytoken') then
    local takeValue = 0
    if value == 1 then
      putBank = getObjectFromGUID(guids.bank[1])
      takeBank = getObjectFromGUID(guids.bank[5])
      takeValue = 5
    elseif value == 5 then
      putBank = getObjectFromGUID(guids.bank[5])
      takeBank = getObjectFromGUID(guids.bank[10])
      takeValue = 10
    elseif value == 10 then
      putBank = getObjectFromGUID(guids.bank[10])
      takeBank = getObjectFromGUID(guids.bank[20])
      takeValue = 20
    elseif value == 20 then
      putBank = getObjectFromGUID(guids.bank[20])
      takeBank = getObjectFromGUID(guids.bank[100])
      takeValue = 100
    elseif value == 50 then
      putBank = getObjectFromGUID(guids.bank[50])
      takeBank = getObjectFromGUID(guids.bank[100])
      takeValue = 100
    elseif value == 100 then
      return
    end
    while object.getQuantity()*value >= takeValue do
      takeBank.takeObject({position=position,rotation=rotation})
      for i = 1, takeValue/value do
        putBank.putObject(object.takeObject())
      end
    end
  end
end

--[[
This is a bit of a hack to ensure all cards have 'Auction' context menu
available.
TODO:  Find a better way to do This
TOrO:  Fix a bug where hitting "UNDO" will remove the context menu item
]]

function announceAuction(player_color, painting)
  assert(painting.hasTag('painting'))
  local msg = player_color
  local easel = getObjectFromGUID(guids.easels[player_color])
  local snapPoint = easel.getSnapPoints()[1]
  local artist = getArtist(painting)
  local auction = getAuctionType(painting)
  local position = easel.getPosition() + snapPoint.position + Vector(0,6,0)
  local rotation = easel.getRotation()  + Vector(90,0,90)
  if auction == 'a Double Auction' then
    position = position + 2*getObjectFromGUID(guids.easelZones[player_color]).getTransformForward()
  end
  painting.setPosition(position+Vector(0,5,0))
  painting.setRotationSmooth(rotation)
  painting.setPositionSmooth(position)
  Wait.time(function()
    if isRoundOver() then
      msg = msg..' plays a painting by '..artist..' and triggers end of round.'
    else
      msg = msg..' is holding '..auction..' for a painting by '..artist
    end
    broadcastToAll(msg, stringColorToRGB(player_color))
    if isRoundOver() then
      broadcastToAll("Click \'Start/Next Round\' button when ready!")
    end
  end, .4)
end

function onObjectLeaveContainer(container, leave_object)
  if leave_object.hasTag('Painting') and container.hasTag('Painting') then
    function announceAuctionWrapper(player_color)
      return announceAuction(player_color, leave_object)
    end
    leave_object.clearContextMenu()
    leave_object.addContextMenuItem("Auction", announceAuctionWrapper)
  end
end

function updateWalletText()
  for color, text_guid in pairs(guids.walletText) do
    local zone_guid = guids.hiddenZones[color]
    local text = getObjectFromGUID(text_guid)
    text.setValue('$'..sumCashInZone(zone_guid)..'k')
  end
end

function onObjectEnterZone(zone, enter_object)
  if zone.hasTag('moneytoken') then
    updateWalletText()
  end
end

function onObjectLeaveZone(zone, leave_object)
  if zone.hasTag('moneytoken') then
    updateWalletText()
  end
end
