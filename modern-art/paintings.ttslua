--paintings.ttslua
--[[
Various functions useful for manipulating paintings (cards) in Modern Art. If I
was better at writing OOP lua code, this would probably be functions defined in
the "painting" class and various instance methods
Original author:  Madeline Prelee, 2021-04-16
--]]

function isInDiscard(obj)
  for _, x in ipairs(getObjectFromGUID(guids.discardZone).getObjects()) do
    if x.guid == obj.guid then
      return true
    end
  end
  return false
end

--[[
Retrieves all paintings that are faceup and not in someone's hand. In terms
of game state, these are all paintings that contribute to end-of-round artist
valuation.
--]]
function getFaceupPaintings()
  local paintings = {}
  for _, obj in ipairs(getObjects()) do
    if (obj.hasTag('painting'))
        and (not obj.hasTag('Deck') )
        and (not obj.hasTag('Deck(Clone)') )
        and (not obj.is_face_down)
        and (tryGetHoldingPlayer(obj) == nil)
        and (not isInDiscard(obj)) then
    table.insert(paintings, obj)
    end
  end
  return paintings
end

--[[
Used to determine end-of-round state and to tally the top 3 artists
Returns a table of artists and the number of their faceup paintings
--]]
function countFaceupPaintings()
  local counts = {
    [ARTIST1] = 0,
    [ARTIST2] = 0,
    [ARTIST3] = 0,
    [ARTIST4] = 0,
    [ARTIST5] = 0, }
  for _, painting in ipairs(getFaceupPaintings()) do
    local artist = getArtist(painting)
    counts[artist] = counts[artist] + 1
  end
  return counts
end

function discardPainting(obj)
  if obj.hasTag('painting') then
    local discardPosition = getObjectFromGUID(guids.discardZone).getPosition()
    obj.setRotationSmooth(Vector(0,0,0))
    obj.setPositionSmooth(discardPosition+Vector(0,-1,0), false, true)
  end
end

function discardEasels()
  for _, zone_guid in pairs(guids.easelZones) do
    local zone = getObjectFromGUID(zone_guid)
    for _, obj in ipairs(zone.getObjects()) do
      if obj.hasTag('painting') then
        discardPainting(obj)
      end
    end
  end
end


--[[
Self explanatory...collect discards for new round
--]]
function collectPayoutsAndDiscards()
  local bank10 = getObjectFromGUID(guids.bank[10])
  local bank20 = getObjectFromGUID(guids.bank[20])
  discardEasels()
  Wait.time(function()
    for _, painting in ipairs(getFaceupPaintings()) do
        local artist = getArtist(painting)
        local value = getArtistValue(artist)
        local moneyPosition = painting.getPosition()
        if value == 30 then
          bank10.takeObject({position=moneyPosition})
          bank20.takeObject({position=moneyPosition})
        elseif value == 20 then
          bank20.takeObject({position=moneyPosition})
        elseif value == 10 then
          bank10.takeObject({position=moneyPosition})
        end
        discardPainting(painting)
    end
  end, 1)

end

function tryGetHoldingPlayer(obj)
  for _, zone in ipairs(obj.getZones()) do
    local guid = zone.guid
    local player_color = findKey(guids.handZones, guid)
    if player_color ~= nil then return player_color end
  end
  return nil
end
